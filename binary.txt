You have been given an array A consisting of N integers. All the elements in this array A are unique. You have to answer some queries based on the elements of this array. Each query will consist of a single integer x. You need to print the rank based position of this element in this array considering that the array is 1 indexed. The rank based position of an element in an array is its position in the array when the array has been sorted in ascending order.

Note: It is guaranteed that all the elements in this array are unique and for each x belonging to a query, value x shall exist in the array

#include <iostream>
#include <algorithm>
using namespace std;
int binary(long long A[], int low, int high, long long key);
int main()
{
int N, q;
cin>>N;
long long A[N];
for(int i=1; i<=N; i++)
cin>>A[i];
sort(A+1, A+N+1);
cin>>q;
int low, high;
low = 1;
high = N;
for(int i=1; i<=q; i++){
long long result, x;
cin>>x;
result = binary(A, low, high, x);
if(result != -1)
cout<<result<<endl;
}
return 0;
}
int binary(long long A[], int low, int high, long long key){
while(low<=high){
int mid = (low + high)/2;
if(A[mid] < key)
low = mid+1;
else if(A[mid] > key)
high = mid-1;
else
return mid;
}
return -1;
}
